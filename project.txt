#include<stdio.h>
#include<glut.h>

GLfloat a=0,b=0,c=0,d=0,e=0;
void building();
void road2();
//void building2();
void outline();
void blast();
void road();
void display2();
void display3();
void build_outline();
void build_outline2();
void trees();
void mountain();
int i;
void road1();

char s[20]="PRESS S TO START";
char s1[300]="Maximize window for better view-------------------------------------------------------->>";
char s2[100]="SHRI MADHWA VADIRAJA INSTITUE OF TECHNOLOGY AND MANAGEMENT ";
char s3[100]="DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING";
char s4[20]="A Mini Project On:-";
char s5[50]="MANGLORE AIRPLANE CRASH";
char s6[200]="BY- AISHWARYA C & SHETTY PARINITHA GANGADHAR";
char s7[200]="USN-4MW15CS001 & 4MW14CS092";
char s8[200]="Under the Guidence of :Mr.B.N RAMACHANDRA B.E,MTech";
char s9[50]="Lecturer,Dept. of CSE";
char s10[100]="PRESS Q TO EXIT";
char s11[100]="PRESS M TO MOVE THE PLANE";
char texta[]={"BOOOOOM!!"};
char textb[]={"DUBAI INTERNATIONAL AIRPORT"};
char textc[]={"MANGLORE INTERNATIONAL AIRPORT"};
char textf[]={"On May 22nd 2010 an Airindia 737-800 was on its way from dubai to manglore.on board were 160 passengers along with 6 crew members.The aircraft was 3 years old.As they descended,the weather at Manglore deteriorated the visibility reduced."};
char textg[]={"The captain had slept during the descend.The FO wakes him up for approach.The aircraft flew above the normal path,about 2000 feet height.Due to the captain's negligence the touchdown was so hard that the gear bursted on landing."};
char textu[]={"There was no way to stop the plane.This lead to the aircraft over shooting the runway and crashing down the hill.158 people lost their lives.8 members survived the accident."};
int j,n;
int t,o,m,f,g,u;
int flag=0;



void update(int value)
{
	a+=0.0;	//Plane position takeoff on x axis
	b-=0.0;	//Road Strip backward movement
	c+=0;	//take off at certain angle on y axis
	
	if(b<=-78.0)// moving of run way
		b=0.0;
		
	glutPostRedisplay();
	glutTimerFunc(200,update,0);//delay
}
void update1(int value)
{
	m=0.0;	//Plane position takeoff on x axis
	b-=0.0;	//Road Strip backward movement
	n+=0;	//take off at certain angle on y axis
	
	if(b<=-78.0)// moving of run way
		b=0.0;
		
	glutPostRedisplay();
	glutTimerFunc(10,update,0);//delay
}
void building()
{
	glBegin(GL_POLYGON);
	
	glColor3f(0.692,0.7690,0.870);

	glVertex2f(60,180);
	glVertex2f(60,350);
	glVertex2f(400,350);
	glVertex2f(400,180);
	


	glEnd();
}

void mountain1()

	{
	glBegin(GL_POLYGON);
glColor3f(0.4,0.2,0.0);
	glVertex2i(240,0);
	glVertex2i(290,125);
    glVertex2i(400,0);

glEnd();


glBegin(GL_POLYGON);
glColor3f(0.5,0.3,0.0);
	glVertex2i(300,0);
	glVertex2i(390,105);
    glVertex2i(499,0);

glEnd();

/*
glBegin(GL_POLYGON);
glColor3f(0.6,0.0,0.0);
	glVertex2i(140,300);
	glVertex2i(350,305);
    glVertex2i(270,376);

glEnd();

glBegin(GL_POLYGON);
glColor3f(0.5,0.0,0.0);
	glVertex2i(200,290);
	glVertex2i(490,200);
    glVertex2i(360,376);

glEnd();

glBegin(GL_POLYGON);
glColor3f(0.5,0.0,0.0);
	glVertex2i(490,210);
	glVertex2i(499,285);
    glVertex2i(300,348);

glEnd();
glBegin(GL_POLYGON);
glColor3f(0.6,0.0,0.0);
	glVertex2i(200,180);
	glVertex2i(410,364);
    glVertex2i(509,304);

glEnd();*/
}
void building2()
{glBegin(GL_POLYGON);
glColor3f(0.692,0.7690,0.870);
	glVertex2i(65,200);

	glVertex2i(65,370);
    glVertex2i(300,370);
	glVertex2i(300,200);

glEnd();
}
void buildgate2()
{
	
	glBegin(GL_POLYGON);
glColor3f(0.2,0.3,0.50);
glVertex2i(120,200);
	glVertex2i(120,260);
	glVertex2i(210,260);
			glVertex2i(210,200);
			glEnd();
}
void buildgateout2()
{
	glLineWidth(2.0);
	glBegin(GL_LINES);
glColor3f(0.0,0.0,0.0);

	glVertex2i(120,200);
	glVertex2i(120,260);
		glVertex2i(120,260);
			glVertex2i(210,260);
			glVertex2i(210,260);
			glVertex2i(210,200);
		glEnd();
}
void buildout2()
{glLineWidth(2.0);
	glBegin(GL_LINES);
glColor3f(0.0,0.0,0.0);

	glVertex2i(65,200);
	glVertex2i(65,370);
	glVertex2i(65,330);
	glVertex2i(300,330);
	glVertex2i(65,370);
	glVertex2i(300,370);
    glVertex2i(300,370);
	glVertex2i(300,200);
	glVertex2i(300,200);
	glVertex2i(65,200);
	glEnd();
	}




void buildingGate()

{
	glBegin(GL_POLYGON);
glColor3f(0.2,0.3,0.50);
	glVertex2i(150,180);
	glVertex2i(150,268);
    glVertex2i(265,268);
	glVertex2i(265,180);

glEnd();
}
void buildingOUT()
{glLineWidth(2.0);
	glBegin(GL_LINES);
	//glLineWidth(10.0);
	
	//glVertex2f(40,350);

	//glVertex2f(350,400);
	glColor3f(0.0,0.0,0.0);
	glVertex2f(60,180);

	glVertex2f(60,350);
	glVertex2f(60,320);
	glVertex2f(400,320);
	glVertex2f(60,350);
	glVertex2f(400,350);
	glVertex2f(400,350);
	//glVertex2f(400,350);
	glVertex2f(400,180);
	glVertex2f(400,180);
	glVertex2f(60,180);

	//glLineWidth(10.0);
	glEnd();
}

void outlineroad()
{glLineWidth(2.0);

	glBegin(GL_LINES);
	//glPointSize(10.0);
glColor3f(0.0,0.0,0.0);
	glVertex2f(100,100);
	glVertex2f(150,180);
	glVertex2f(150,180);
    glVertex2f(265,180);
	glVertex2f(265,180);
	 glVertex2f(230,100);
	glEnd();
}
void road2()
{

	glBegin(GL_POLYGON);
glColor3f(0.412,0.412,0.412);
	glVertex2f(100,100);
	glVertex2f(150,180);
    glVertex2f(265,180);
	 glVertex2f(230,100);
	glEnd();
}


void trees()
{
	
  /*
  glBegin(GL_POLYGON);
   glColor3f(1.0,0.3,0.0);
	glVertex2i(312,350);
	glVertex2i(312,323);
	glVertex2i(309,323);
	glVertex2i(309,350);
   glEnd();

   */
	/*glBegin(GL_POLYGON);
   glColor3f(0.0,0.8,0.0);
	glVertex2i(290,340);
	glVertex2i(330,350);
    glVertex2i(310,380);
	glEnd();

*/
/*glBegin(GL_POLYGON);
   glColor3f(1.0,0.3,0.0);
	glVertex2i(212,350);
	glVertex2i(212,323);
	glVertex2i(209,323);
	glVertex2i(209,310);
   glEnd();

   */
	/*glBegin(GL_POLYGON);
   glColor3f(0.0,1.0,0.0);
	glVertex2i(190,330);
	glVertex2i(230,330);
    glVertex2i(210,380);
	glEnd();
	*/

	
glBegin(GL_POLYGON);
   glColor3f(1.0,0.3,0.0);
	glVertex2i(112,310);
	glVertex2i(112,333);
	glVertex2i(109,333);
	glVertex2i(109,310);
   glEnd();


	glBegin(GL_POLYGON);
   glColor3f(0.0,1.0,0.0);
	glVertex2i(90,330);
	glVertex2i(130,330);
    glVertex2i(110,380);
	glEnd();

		
glBegin(GL_POLYGON);
   glColor3f(1.0,0.3,0.0);
	glVertex2i(12,310);
	glVertex2i(12,333);
	glVertex2i(9,333);
	glVertex2i(9,310);
   glEnd();


	glBegin(GL_POLYGON);
   glColor3f(0.0,1.0,0.0);
	glVertex2i(-10,330);
	glVertex2i(30,330);
    glVertex2i(10,380);
	glEnd();
}


void mountain()
{
	glBegin(GL_POLYGON);
glColor3f(0.6,0.0,0.0);
	glVertex2i(-20,290);
	glVertex2i(100,305);
    glVertex2i(30,370);

glEnd();


glBegin(GL_POLYGON);
glColor3f(0.5,0.0,0.0);
	glVertex2i(40,290);
	glVertex2i(230,305);
    glVertex2i(150,376);

glEnd();


glBegin(GL_POLYGON);
glColor3f(0.6,0.0,0.0);
	glVertex2i(140,300);
	glVertex2i(350,305);
    glVertex2i(270,376);

glEnd();

glBegin(GL_POLYGON);
glColor3f(0.5,0.0,0.0);
	glVertex2i(200,290);
	glVertex2i(490,200);
    glVertex2i(360,376);

glEnd();

glBegin(GL_POLYGON);
glColor3f(0.5,0.0,0.0);
	glVertex2i(490,210);
	glVertex2i(499,285);
    glVertex2i(300,348);

glEnd();
glBegin(GL_POLYGON);
glColor3f(0.6,0.0,0.0);
	glVertex2i(200,180);
	glVertex2i(410,364);
    glVertex2i(509,304);

glEnd();
}




void display(void)
{
glClear(GL_COLOR_BUFFER_BIT);
if(flag==0)
{

	glRasterPos3f(58,42,0);
for(i=0;s[i]!='\0';i++) 
	glutBitmapCharacter(GLUT_BITMAP_HELVETICA_18,s[i]);

glRasterPos3f(45,450,0);
for(i=0;s1[i]!='\0';i++) 
glutBitmapCharacter( GLUT_BITMAP_HELVETICA_18,s1[i]);
glRasterPos3f(70,358,0);
for(i=0;s2[i]!='\0';i++) 
glutBitmapCharacter( GLUT_BITMAP_TIMES_ROMAN_24,s2[i]);
glRasterPos3f(120,328,0);

for(i=0;s3[i]!='\0';i++) 
glutBitmapCharacter( GLUT_BITMAP_TIMES_ROMAN_24,s3[i]);
glRasterPos3f(218,218,0);
for(i=0;s4[i]!='\0';i++) 
glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24,s4[i]);
glRasterPos3f(320,218,0);
for(i=0;s5[i]!='\0';i++) 
glutBitmapCharacter( GLUT_BITMAP_TIMES_ROMAN_24,s5[i]);
glRasterPos3f(250,150,0);
for(i=0;s6[i]!='\0';i++) 
glutBitmapCharacter( GLUT_BITMAP_TIMES_ROMAN_24,s6[i]);
glColor3f(1.0,1.0,0.0);
glRasterPos3f(250,130,0);
for(i=0;s7[i]!='\0';i++) 
glutBitmapCharacter( GLUT_BITMAP_TIMES_ROMAN_24,s7[i]);
glRasterPos3f(250,100,0);
for(i=0;s8[i]!='\0';i++) 
glutBitmapCharacter( GLUT_BITMAP_TIMES_ROMAN_24,s8[i]);
glRasterPos3f(58,27,0);
for(i=0;s10[i]!='\0';i++) 
glutBitmapCharacter( GLUT_BITMAP_HELVETICA_18,s10[i]);


glRasterPos3f(58,12,0);
for(i=0;s11[i]!='\0';i++) 
glutBitmapCharacter( GLUT_BITMAP_HELVETICA_18,s11[i]);


}
else
{

	road();
	
mountain();


	
//green
glBegin(GL_POLYGON);
glColor3f(0.0,0.6,0.0);
	glVertex2i(-10,300);
	glVertex2i(645,310);
   	glVertex2i(940,100);
	glVertex2i(-10,100);
glEnd();


trees();
building();
buildingGate();
buildingOUT();
road2();
outlineroad();

	glColor3f(0.0,0.0,0.0);
	

			glRasterPos3f(150,330,0);			
			for(t=0;textb[t]!='\0';t++)
				glutBitmapCharacter( GLUT_BITMAP_TIMES_ROMAN_24, textb[t]); 
//plane construction

glPushMatrix();
glTranslated(a,c,0.0);
glColor3f(1,1,0);
glBegin(GL_POLYGON);//rectangular body
glVertex2f(0.0,30.0);
glVertex2f(0.0,55.0);
glVertex2f(135.0,55.0);
glVertex2f(135.0,30.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(a,c,0.0);
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);//upper triangle construction plane
glVertex2f(135.0,55.0);
glVertex2f(150.0,50.0);
glVertex2f(155.0,45.0);
glVertex2f(160.0,40.0);
glVertex2f(135.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(a,c,0.0);
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINE_LOOP);//outline of upper triangle plane
glVertex2f(135.0,55.0);
glVertex2f(150.0,50.0);
glVertex2f(155.0,45.0);
glVertex2f(160.0,40.0);
glVertex2f(135.0,40.0);
glEnd();
glPopMatrix();


glPushMatrix();
glTranslated(a,c,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);//lower triangle
glVertex2f(135.0,40.0);
glVertex2f(160.0,40.0);
glVertex2f(160.0,37.0);
glVertex2f(145.0,30.0);
glVertex2f(135.0,30.0);
glEnd();
glPopMatrix();


glPushMatrix();
glTranslated(a,c,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);//back wing 
glVertex2f(0.0,55.0);
glVertex2f(0.0,80.0);
glVertex2f(10.0,80.0);
glVertex2f(40.0,55.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(a,c,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);//left side wing
glVertex2f(65.0,55.0);
glVertex2f(50.0,70.0);
glVertex2f(75.0,70.0);
glVertex2f(90.0,55.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(a,c,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);//rightside wing
glVertex2f(70.0,40.0);
glVertex2f(100.0,40.0);
glVertex2f(80.0,15.0);
glVertex2f(50.0,15.0);

glEnd();


glPopMatrix();


	if(c>390)    //timer to jump to next display
{
	display2();
	d+=5;//plane takeoff on x in 2nd display
}

if(a>500.0)//window position during take off
{
	a=0.0;
	b=0.0;
}

if(c>400)//timer to jump to 3rd display
{
	display3();
	e+=5;//plane takeoff on x in 3rd display
	
	if(e>250)//timer to call blast function
	{
		blast();
		e=450;
	}
}

}

glFlush();
glutSwapBuffers();
}





/*void building()
{
glColor3f(0.60,0.40,0.70);
glBegin(GL_POLYGON);
glVertex2f(350.0,80.0);
glVertex2f(350.0,480.0);
glVertex2f(400.0,400.0);
glVertex2f(400.0,0.0);
glEnd();

glColor3f(0.75,0.75,0.75);
glBegin(GL_POLYGON);
glVertex2f(400.0,0.0);
glVertex2f(400.0,400.0);
glVertex2f(450.0,400.0);
glVertex2f(450.0,0.0);
glEnd();

glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(400.0,400.0);
glVertex2f(350.0,480.0);
glVertex2f(400.0,480.0);
glVertex2f(450.0,400.0);
glEnd();

glColor3f(0.60,0.40,0.70);
glBegin(GL_POLYGON);//upper triangle of building
glVertex2f(400.0,400.0);
glVertex2f(350.0,480.0);
glVertex2f(400.0,480.0);
glEnd();



glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);//seperation line of floors
glVertex2f(350.0,180);
glVertex2f(400.0,100);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(350.0,280);
glVertex2f(400.0,200);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(350.0,380);
glVertex2f(400.0,300);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(450.0,100);
glVertex2f(400.0,100);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(450.0,200);
glVertex2f(400.0,200);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(450.0,300);
glVertex2f(400.0,300);

glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(350.0,180);
glEnd();

build_outline();
}


void build_outline()//building out lines
{
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINE_LOOP);
glVertex2f(350.0,80.0);
glVertex2f(350.0,480.0);
glVertex2f(400.0,400.0);
glVertex2f(400.0,0.0);
glEnd();

glColor3f(0.0,0.0,0.0);
glBegin(GL_LINE_LOOP);
glVertex2f(400.0,0.0);
glVertex2f(400.0,400.0);
glVertex2f(450.0,400.0);
glVertex2f(450.0,0.0);
glEnd();

glColor3f(0.0,0.0,0.0);
glBegin(GL_LINE_LOOP);
glVertex2f(400.0,400.0);
glVertex2f(350.0,480.0);
glVertex2f(400.0,480.0);
glVertex2f(450.0,400.0);
glEnd();
}

void building2()
{
glColor3f(0.80,0.20,0.30);
glBegin(GL_POLYGON);
glVertex2f(25.0,8.0);
glVertex2f(25.0,38.0);
glVertex2f(30.0,30.0);
glVertex2f(30.0,0.0);
glEnd();

glColor3f(0.75,0.75,0.75);
glBegin(GL_POLYGON);
glVertex2f(30.0,0.0);
glVertex2f(30.0,30.0);
glVertex2f(35.0,30.0);
glVertex2f(35.0,0.0);
glEnd();

glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(30.0,20.0);
glVertex2f(25.0,38.0);
glVertex2f(30.0,38.0);
glVertex2f(35.0,30.0);
glEnd();

glColor3f(0.60,0.40,0.70);
glBegin(GL_POLYGON);//upper triangle of building
glVertex2f(30.0,30.0);
glVertex2f(25.0,38.0);
glVertex2f(30.0,38.0);
glEnd();



glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);//seperation line of floors
glVertex2f(25.0,18);
glVertex2f(30.0,10);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(25.0,18);
glVertex2f(30.0,10);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(25.0,28);
glVertex2f(30.0,20);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(35.0,10);
glVertex2f(30.0,10);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(35.0,20);
glVertex2f(30.0,20);
glEnd();
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(35.0,20);
glVertex2f(30.0,20);

glColor3f(0.0,0.0,0.0);
glBegin(GL_LINES);
glVertex2f(25.0,18);
glEnd();

build_outline2();
}


void build_outline2()//building out lines
{
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINE_LOOP);
glVertex2f(25.0,8.0);
glVertex2f(25.0,38.0);
glVertex2f(30.0,30.0);
glVertex2f(30.0,0.0);
glEnd();

glColor3f(0.0,0.0,0.0);
glBegin(GL_LINE_LOOP);
glVertex2f(30.0,0.0);
glVertex2f(30.0,30.0);
glVertex2f(35.0,30.0);
glVertex2f(35.0,0.0);
glEnd();

glColor3f(0.0,0.0,0.0);
glBegin(GL_LINE_LOOP);
glVertex2f(30.0,30.0);
glVertex2f(25.0,38.0);
glVertex2f(30.0,38.0);
glVertex2f(35.0,30.0);
glEnd();
}*/


void blast(void)//blast polygon construction
{
b=0;
glPushMatrix();
glTranslated(-10.0,-60.0,0.0);	
glColor3f(0.7,0.0,0.0);
	b=0;
glBegin(GL_POLYGON);
glVertex2f(404.4,320.0);
glVertex2f(384.0,285.0);
glVertex2f(368.0,344.5);
glVertex2f(344.0,355.0);
glVertex2f(347.2,414.5);
glVertex2f(332.8,442.5);
glVertex2f(347.2,477.5);
glVertex2f(352.0,530.0);
glVertex2f(379.2,519.5);
glVertex2f(396.8,565.0);
glVertex2f(416.0,530.0);
glVertex2f(440.0,547.5);
glVertex2f(452.8,512.5);
glVertex2f(472.0,512.5);
glVertex2f(475.2,470.5);
glVertex2f(488.0,442.5);
glVertex2f(488.0,404.0);
glVertex2f(470.0,372.5);
glVertex2f(475.2,337.5);
glVertex2f(464.0,306.0);
glVertex2f(444.8,320.0);
glVertex2f(425.6,285.0);
glVertex2f(404.8,320.0);
glEnd();
glPopMatrix();

glColor3f(1.0,1.0,1.0);
			glRasterPos3f(380,350,0);			
			for(j=0;texta[j]!='\0';j++)
				glutBitmapCharacter( GLUT_BITMAP_HELVETICA_18, texta[j]); 
	
			
			
}

void road1()
{

glColor3f(0.0,0.0,0.0);
glBegin(GL_POLYGON);//black road
glVertex2f(0.0,0.0);
glVertex2f(0.0,100.0);
glVertex2f(250.0,25.0);
glVertex2f(250.0,0.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.5,0.0);
glBegin(GL_POLYGON);//yellow strips on road
glVertex2f(20.0,20.0);
glVertex2f(30.0,45.0);
glVertex2f(80.0,30.0);
glVertex2f(75.0,20.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.7,0.0);
glBegin(GL_POLYGON);
glVertex2f(85.0,20.0);
glVertex2f(95.0,45.0);
glVertex2f(135.0,30.0);
glVertex2f(130.0,20.0);
glEnd();
glPopMatrix();
}
/*
glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.7,0.0);
glBegin(GL_POLYGON);
glVertex2f(200.0,40.0);
glVertex2f(208.0,60.0);
glVertex2f(258.0,60.0);
glVertex2f(250.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.7,0.0);
glBegin(GL_POLYGON);
glVertex2f(300.0,40.0);
glVertex2f(308.0,60.0);
glVertex2f(358.0,60.0);
glVertex2f(350.0,40.0);
glEnd();
glPopMatrix();


*/



void road()
{

glColor3f(0.0,0.0,0.0);
glBegin(GL_POLYGON);//black road
glVertex2f(0.0,0.0);
glVertex2f(0.0,100.0);
glVertex2f(500.0,100.0);
glVertex2f(500.0,0.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.5,0.0);
glBegin(GL_POLYGON);//yellow strips on road
glVertex2f(0.0,40.0);
glVertex2f(8.0,60.0);
glVertex2f(58.0,60.0);
glVertex2f(50.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.7,0.0);
glBegin(GL_POLYGON);
glVertex2f(100.0,40.0);
glVertex2f(108.0,60.0);
glVertex2f(158.0,60.0);
glVertex2f(150.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.7,0.0);
glBegin(GL_POLYGON);
glVertex2f(200.0,40.0);
glVertex2f(208.0,60.0);
glVertex2f(258.0,60.0);
glVertex2f(250.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.7,0.0);
glBegin(GL_POLYGON);
glVertex2f(300.0,40.0);
glVertex2f(308.0,60.0);
glVertex2f(358.0,60.0);
glVertex2f(350.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.7,0.0);
glBegin(GL_POLYGON);
glVertex2f(400.0,40.0);
glVertex2f(408.0,60.0);
glVertex2f(458.0,60.0);
glVertex2f(450.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.7,0.0);
glBegin(GL_POLYGON);
glVertex2f(500.0,40.0);
glVertex2f(508.0,60.0);
glVertex2f(558.0,60.0);
glVertex2f(550.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(b,0.0,0.0);
glColor3f(0.9,0.7,0.0);
glBegin(GL_POLYGON);
glVertex2f(600.0,40.0);
glVertex2f(608.0,60.0);
glVertex2f(658.0,60.0);
glVertex2f(650.0,40.0);
glEnd();
glPopMatrix();




}
void display2()
{

glClear(GL_COLOR_BUFFER_BIT);

mountain();


//green
glBegin(GL_POLYGON);
glColor3f(0.0,0.699740,0.8);
	glVertex2i(-10,300);
	glVertex2i(645,310);
   	glVertex2i(940,0);
	glVertex2i(-10,0);
glEnd();

trees();

glPushMatrix();
glTranslated(d,410.0,0.0);
glColor3f(1.0,1.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(0.0,30.0);
glVertex2f(0.0,55.0);
glVertex2f(135.0,55.0);
glVertex2f(135.0,30.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(d,410.0,0.0);
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);
glVertex2f(135.0,55.0);
glVertex2f(150.0,50.0);
glVertex2f(155.0,45.0);
glVertex2f(160.0,40.0);
glVertex2f(135.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(d,410.0,0.0);
glColor3f(1.0,1.0,1.0);
glBegin(GL_LINE_LOOP);
glVertex2f(135.0,55.0);
glVertex2f(150.0,50.0);
glVertex2f(155.0,45.0);
glVertex2f(160.0,40.0);
glVertex2f(135.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(d,410.0,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(135.0,40.0);
glVertex2f(160.0,40.0);
glVertex2f(160.0,37.0);
glVertex2f(145.0,30.0);
glVertex2f(135.0,30.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(d,410.0,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(0.0,55.0);
glVertex2f(0.0,80.0);
glVertex2f(10.0,80.0);
glVertex2f(40.0,55.0);
//glVertex2f(165.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(d,410.0,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(65.0,55.0);
glVertex2f(50.0,70.0);
glVertex2f(75.0,70.0);
glVertex2f(90.0,55.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(d,410.0,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);
glVertex2f(70.0,40.0);
glVertex2f(100.0,40.0);
glVertex2f(80.0,15.0);
glVertex2f(50.0,15.0);

glEnd();
glPopMatrix();


}

void display3()

{

glClear(GL_COLOR_BUFFER_BIT);
//road1();
//road();
//mountain1();
glBegin(GL_POLYGON);
glColor3f(0.0,0.499740,0.0);
	glVertex2i(0,300);
	glVertex2i(645,300);
   	glVertex2i(940,0);
	glVertex2i(-10,0);
glEnd();
building2();

	glColor3f(0.0,0.0,0.0);
	

			glRasterPos3f(100,335,0);			
			for(o=0;textc[o]!='\0';o++)
				glutBitmapCharacter( GLUT_BITMAP_TIMES_ROMAN_24, textc[o]);
buildout2();
buildgateout2();
buildgate2();
road1();
mountain1();


glPushMatrix();
glTranslated(0,200,0.0);
glColor3f(1,1,0);
glBegin(GL_POLYGON);//rectangular body
glVertex2f(0.0,30.0);
glVertex2f(0.0,55.0);
glVertex2f(135.0,55.0);
glVertex2f(135.0,30.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(0,200,0.0);
glColor3f(1.0,1.0,1.0);
glBegin(GL_POLYGON);//upper triangle construction plane
glVertex2f(135.0,55.0);
glVertex2f(150.0,50.0);
glVertex2f(155.0,45.0);
glVertex2f(160.0,40.0);
glVertex2f(135.0,40.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(0,200,0.0);
glColor3f(0.0,0.0,0.0);
glBegin(GL_LINE_LOOP);//outline of upper triangle plane
glVertex2f(135.0,55.0);
glVertex2f(150.0,50.0);
glVertex2f(155.0,45.0);
glVertex2f(160.0,40.0);
glVertex2f(135.0,40.0);
glEnd();
glPopMatrix();


glPushMatrix();
glTranslated(0,200,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);//lower triangle
glVertex2f(135.0,40.0);
glVertex2f(160.0,40.0);
glVertex2f(160.0,37.0);
glVertex2f(145.0,30.0);
glVertex2f(135.0,30.0);
glEnd();
glPopMatrix();


glPushMatrix();
glTranslated(0,200,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);//back wing 
glVertex2f(0.0,55.0);
glVertex2f(0.0,80.0);
glVertex2f(10.0,80.0);
glVertex2f(40.0,55.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(0,200,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);//left side wing
glVertex2f(65.0,55.0);
glVertex2f(50.0,70.0);
glVertex2f(75.0,70.0);
glVertex2f(90.0,55.0);
glEnd();
glPopMatrix();

glPushMatrix();
glTranslated(0,200,0.0);
glColor3f(1.0,0.0,0.0);
glBegin(GL_POLYGON);//rightside wing
glVertex2f(70.0,40.0);
glVertex2f(100.0,40.0);
glVertex2f(80.0,15.0);
glVertex2f(50.0,15.0);

glEnd();


glPopMatrix();


update1(1);
glColor3f(0.0,0.0,0.0);
	

			glRasterPos3f(0,450,0);			
			for(g=0;textg[g]!='\0';g++)
				glutBitmapCharacter( GLUT_BITMAP_HELVETICA_18, textg[g]);
				glColor3f(0.0,0.0,0.0);
	
glColor3f(0.0,0.0,0.0);
			glRasterPos3f(0,430,0);			
			for(u=0;textu[u]!='\0';u++)
				glutBitmapCharacter( GLUT_BITMAP_HELVETICA_18, textu[u]);
}
void myinit()
{

glClearColor(0.196078f,0.196078f,0.8f,0.0f);
//glClearColor(0.196078f,0.6f,0.8f,0.0f);
glColor3f(0.2,0.0,0.3);
glPointSize(1.0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(0.0,499.0,0.0,499.0);

}


void keys(unsigned char key,int x,int y)
{
	
    if(key=='s')
		flag=1;


	if(key=='q') exit(0);
	
	if(key=='m')  
	{
  	a+=4.0;	//Plane position takeoff on x axis
	b-=5.0;	//Road Strip backward movement
	c+=5;	//take off at certain angle on y axis
	//d-=5;//landing
	}
	display();
	if(b<=-78.0) // moving of run way
		{
			b-=2.0;//take off at certain angle on y axis
			display3();
		
	}
	

	
	/*	d-=5;
	display3();*/
}


void main(int argc, char* argv[])
{
glutInit(&argc, argv);
glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
glutInitWindowSize(900.0,800.0);
glutInitWindowPosition(0,0);
glutCreateWindow("aeroplane crash");
glutDisplayFunc(display);
myinit();
glutKeyboardFunc(keys);
glutTimerFunc(200,update,0);
glutMainLoop();
}